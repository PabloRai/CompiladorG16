digraph Automaton {
  0 [label="0\n$accept -> . program $end"]
  0 -> 1 [style=solid label="DEFVAR"]
  0 -> 2 [style=dashed label="program"]
  0 -> 3 [style=dashed label="sentence"]
  0 -> 4 [style=dashed label="variable_declaration_block"]
  1 [label="1\nvariable_declaration_block -> DEFVAR . variable_declarations ENDDEF"]
  1 -> 5 [style=solid label="INT_TYPE"]
  1 -> 6 [style=solid label="FLOAT_TYPE"]
  1 -> 7 [style=solid label="STRING_TYPE"]
  1 -> 8 [style=dashed label="variable_declarations"]
  1 -> 9 [style=dashed label="variable_declaration"]
  1 -> 10 [style=dashed label="variable_type"]
  2 [label="2\n$accept -> program . $end"]
  2 -> 11 [style=solid label="$end"]
  3 [label="3\nprogram -> sentence ."]
  4 [label="4\nsentence -> variable_declaration_block . algorithms\nsentence -> variable_declaration_block ."]
  4 -> 12 [style=solid label="WHILE"]
  4 -> 13 [style=solid label="IF"]
  4 -> 14 [style=solid label="FOR"]
  4 -> 15 [style=solid label="DISPLAY"]
  4 -> 16 [style=solid label="GET"]
  4 -> 17 [style=solid label="ID"]
  4 -> 18 [style=dashed label="algorithms"]
  4 -> 19 [style=dashed label="algorithm"]
  4 -> 20 [style=dashed label="decision"]
  4 -> 21 [style=dashed label="assignment"]
  4 -> 22 [style=dashed label="while_loop"]
  4 -> 23 [style=dashed label="while_special"]
  4 -> 24 [style=dashed label="for_loop"]
  4 -> 25 [style=dashed label="display"]
  4 -> 26 [style=dashed label="get"]
  5 [label="5\nvariable_type -> INT_TYPE ."]
  6 [label="6\nvariable_type -> FLOAT_TYPE ."]
  7 [label="7\nvariable_type -> STRING_TYPE ."]
  8 [label="8\nvariable_declaration_block -> DEFVAR variable_declarations . ENDDEF\nvariable_declarations -> variable_declarations . variable_declaration"]
  8 -> 27 [style=solid label="ENDDEF"]
  8 -> 5 [style=solid label="INT_TYPE"]
  8 -> 6 [style=solid label="FLOAT_TYPE"]
  8 -> 7 [style=solid label="STRING_TYPE"]
  8 -> 28 [style=dashed label="variable_declaration"]
  8 -> 10 [style=dashed label="variable_type"]
  9 [label="9\nvariable_declarations -> variable_declaration ."]
  10 [label="10\nvariable_declaration -> variable_type . COLON variable_list"]
  10 -> 29 [style=solid label="COLON"]
  11 [label="11\n$accept -> program $end ."]
  12 [label="12\nwhile_loop -> WHILE . OPENING_PARENTHESIS condition CLOSING_PARENTHESIS OPENING_KEY algorithms CLOSING_KEY\nwhile_special -> WHILE . ID IN OPENING_SQUARE_BRACKET expression_list CLOSING_SQUARE_BRACKET DO algorithms ENDWHILE"]
  12 -> 30 [style=solid label="ID"]
  12 -> 31 [style=solid label="OPENING_PARENTHESIS"]
  13 [label="13\ndecision -> IF . OPENING_PARENTHESIS condition CLOSING_PARENTHESIS OPENING_KEY algorithms CLOSING_KEY"]
  13 -> 32 [style=solid label="OPENING_PARENTHESIS"]
  14 [label="14\nfor_loop -> FOR . ID ASSIGNMENT_OPERATOR expression TO expression INTEGER_CONSTANT algorithms NEXT ID\nfor_loop -> FOR . ID ASSIGNMENT_OPERATOR expression TO expression algorithms NEXT ID"]
  14 -> 33 [style=solid label="ID"]
  15 [label="15\ndisplay -> DISPLAY . ID\ndisplay -> DISPLAY . INTEGER_CONSTANT\ndisplay -> DISPLAY . FLOAT_CONSTANT\ndisplay -> DISPLAY . STRING_CONSTANT"]
  15 -> 34 [style=solid label="FLOAT_CONSTANT"]
  15 -> 35 [style=solid label="STRING_CONSTANT"]
  15 -> 36 [style=solid label="INTEGER_CONSTANT"]
  15 -> 37 [style=solid label="ID"]
  16 [label="16\nget -> GET . ID"]
  16 -> 38 [style=solid label="ID"]
  17 [label="17\nassignment -> ID . ASSIGNMENT_OPERATOR expression"]
  17 -> 39 [style=solid label="ASSIGNMENT_OPERATOR"]
  18 [label="18\nsentence -> variable_declaration_block algorithms .\nalgorithms -> algorithms . algorithm"]
  18 -> 12 [style=solid label="WHILE"]
  18 -> 13 [style=solid label="IF"]
  18 -> 14 [style=solid label="FOR"]
  18 -> 15 [style=solid label="DISPLAY"]
  18 -> 16 [style=solid label="GET"]
  18 -> 17 [style=solid label="ID"]
  18 -> 40 [style=dashed label="algorithm"]
  18 -> 20 [style=dashed label="decision"]
  18 -> 21 [style=dashed label="assignment"]
  18 -> 22 [style=dashed label="while_loop"]
  18 -> 23 [style=dashed label="while_special"]
  18 -> 24 [style=dashed label="for_loop"]
  18 -> 25 [style=dashed label="display"]
  18 -> 26 [style=dashed label="get"]
  19 [label="19\nalgorithms -> algorithm ."]
  20 [label="20\nalgorithm -> decision ."]
  21 [label="21\nalgorithm -> assignment ."]
  22 [label="22\nalgorithm -> while_loop ."]
  23 [label="23\nalgorithm -> while_special ."]
  24 [label="24\nalgorithm -> for_loop ."]
  25 [label="25\nalgorithm -> display ."]
  26 [label="26\nalgorithm -> get ."]
  27 [label="27\nvariable_declaration_block -> DEFVAR variable_declarations ENDDEF ."]
  28 [label="28\nvariable_declarations -> variable_declarations variable_declaration ."]
  29 [label="29\nvariable_declaration -> variable_type COLON . variable_list"]
  29 -> 41 [style=solid label="ID"]
  29 -> 42 [style=dashed label="variable_list"]
  30 [label="30\nwhile_special -> WHILE ID . IN OPENING_SQUARE_BRACKET expression_list CLOSING_SQUARE_BRACKET DO algorithms ENDWHILE"]
  30 -> 43 [style=solid label="IN"]
  31 [label="31\nwhile_loop -> WHILE OPENING_PARENTHESIS . condition CLOSING_PARENTHESIS OPENING_KEY algorithms CLOSING_KEY"]
  31 -> 44 [style=solid label="FLOAT_CONSTANT"]
  31 -> 45 [style=solid label="STRING_CONSTANT"]
  31 -> 46 [style=solid label="INTEGER_CONSTANT"]
  31 -> 47 [style=solid label="ID"]
  31 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  31 -> 49 [style=solid label="NOT_LOGIC_OPERATOR"]
  31 -> 50 [style=dashed label="condition"]
  31 -> 51 [style=dashed label="comparation"]
  31 -> 52 [style=dashed label="expression"]
  31 -> 53 [style=dashed label="term"]
  31 -> 54 [style=dashed label="factor"]
  32 [label="32\ndecision -> IF OPENING_PARENTHESIS . condition CLOSING_PARENTHESIS OPENING_KEY algorithms CLOSING_KEY"]
  32 -> 44 [style=solid label="FLOAT_CONSTANT"]
  32 -> 45 [style=solid label="STRING_CONSTANT"]
  32 -> 46 [style=solid label="INTEGER_CONSTANT"]
  32 -> 47 [style=solid label="ID"]
  32 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  32 -> 49 [style=solid label="NOT_LOGIC_OPERATOR"]
  32 -> 55 [style=dashed label="condition"]
  32 -> 51 [style=dashed label="comparation"]
  32 -> 52 [style=dashed label="expression"]
  32 -> 53 [style=dashed label="term"]
  32 -> 54 [style=dashed label="factor"]
  33 [label="33\nfor_loop -> FOR ID . ASSIGNMENT_OPERATOR expression TO expression INTEGER_CONSTANT algorithms NEXT ID\nfor_loop -> FOR ID . ASSIGNMENT_OPERATOR expression TO expression algorithms NEXT ID"]
  33 -> 56 [style=solid label="ASSIGNMENT_OPERATOR"]
  34 [label="34\ndisplay -> DISPLAY FLOAT_CONSTANT ."]
  35 [label="35\ndisplay -> DISPLAY STRING_CONSTANT ."]
  36 [label="36\ndisplay -> DISPLAY INTEGER_CONSTANT ."]
  37 [label="37\ndisplay -> DISPLAY ID ."]
  38 [label="38\nget -> GET ID ."]
  39 [label="39\nassignment -> ID ASSIGNMENT_OPERATOR . expression"]
  39 -> 44 [style=solid label="FLOAT_CONSTANT"]
  39 -> 45 [style=solid label="STRING_CONSTANT"]
  39 -> 46 [style=solid label="INTEGER_CONSTANT"]
  39 -> 47 [style=solid label="ID"]
  39 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  39 -> 57 [style=dashed label="expression"]
  39 -> 53 [style=dashed label="term"]
  39 -> 54 [style=dashed label="factor"]
  40 [label="40\nalgorithms -> algorithms algorithm ."]
  41 [label="41\nvariable_list -> ID ."]
  42 [label="42\nvariable_declaration -> variable_type COLON variable_list .\nvariable_list -> variable_list . SEMICOLON ID"]
  42 -> 58 [style=solid label="SEMICOLON"]
  43 [label="43\nwhile_special -> WHILE ID IN . OPENING_SQUARE_BRACKET expression_list CLOSING_SQUARE_BRACKET DO algorithms ENDWHILE"]
  43 -> 59 [style=solid label="OPENING_SQUARE_BRACKET"]
  44 [label="44\nfactor -> FLOAT_CONSTANT ."]
  45 [label="45\nfactor -> STRING_CONSTANT ."]
  46 [label="46\nfactor -> INTEGER_CONSTANT ."]
  47 [label="47\nfactor -> ID ."]
  48 [label="48\nfactor -> OPENING_PARENTHESIS . expression CLOSING_PARENTHESIS"]
  48 -> 44 [style=solid label="FLOAT_CONSTANT"]
  48 -> 45 [style=solid label="STRING_CONSTANT"]
  48 -> 46 [style=solid label="INTEGER_CONSTANT"]
  48 -> 47 [style=solid label="ID"]
  48 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  48 -> 60 [style=dashed label="expression"]
  48 -> 53 [style=dashed label="term"]
  48 -> 54 [style=dashed label="factor"]
  49 [label="49\ncondition -> NOT_LOGIC_OPERATOR . comparation"]
  49 -> 44 [style=solid label="FLOAT_CONSTANT"]
  49 -> 45 [style=solid label="STRING_CONSTANT"]
  49 -> 46 [style=solid label="INTEGER_CONSTANT"]
  49 -> 47 [style=solid label="ID"]
  49 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  49 -> 61 [style=dashed label="comparation"]
  49 -> 52 [style=dashed label="expression"]
  49 -> 53 [style=dashed label="term"]
  49 -> 54 [style=dashed label="factor"]
  50 [label="50\nwhile_loop -> WHILE OPENING_PARENTHESIS condition . CLOSING_PARENTHESIS OPENING_KEY algorithms CLOSING_KEY"]
  50 -> 62 [style=solid label="CLOSING_PARENTHESIS"]
  51 [label="51\ncondition -> comparation .\ncondition -> comparation . logic_concatenator comparation"]
  51 -> 63 [style=solid label="OR"]
  51 -> 64 [style=solid label="AND"]
  51 -> 65 [style=dashed label="logic_concatenator"]
  52 [label="52\ncomparation -> expression . logic_operator expression\nexpression -> expression . SUM_OPERATOR term\nexpression -> expression . MINUS_OPERATOR term"]
  52 -> 66 [style=solid label="SUM_OPERATOR"]
  52 -> 67 [style=solid label="MINUS_OPERATOR"]
  52 -> 68 [style=solid label="EQUALS_LOGIC_OPERATOR"]
  52 -> 69 [style=solid label="NOT_EQUALS_LOGIC_OPERATOR"]
  52 -> 70 [style=solid label="GREATER_LOGIC_OPERATOR"]
  52 -> 71 [style=solid label="GREATER_OR_EQUAL_LOGIC_OPERATOR"]
  52 -> 72 [style=solid label="LOWER_LOGIC_OPERATOR"]
  52 -> 73 [style=solid label="LOWER_OR_EQUAL_LOGIC_OPERATOR"]
  52 -> 74 [style=dashed label="logic_operator"]
  53 [label="53\nexpression -> term .\nterm -> term . MULTIPLIER_OPERATOR factor\nterm -> term . DIVIDE_OPERATOR factor"]
  53 -> 75 [style=solid label="DIVIDE_OPERATOR"]
  53 -> 76 [style=solid label="MULTIPLIER_OPERATOR"]
  54 [label="54\nterm -> factor ."]
  55 [label="55\ndecision -> IF OPENING_PARENTHESIS condition . CLOSING_PARENTHESIS OPENING_KEY algorithms CLOSING_KEY"]
  55 -> 77 [style=solid label="CLOSING_PARENTHESIS"]
  56 [label="56\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR . expression TO expression INTEGER_CONSTANT algorithms NEXT ID\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR . expression TO expression algorithms NEXT ID"]
  56 -> 44 [style=solid label="FLOAT_CONSTANT"]
  56 -> 45 [style=solid label="STRING_CONSTANT"]
  56 -> 46 [style=solid label="INTEGER_CONSTANT"]
  56 -> 47 [style=solid label="ID"]
  56 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  56 -> 78 [style=dashed label="expression"]
  56 -> 53 [style=dashed label="term"]
  56 -> 54 [style=dashed label="factor"]
  57 [label="57\nassignment -> ID ASSIGNMENT_OPERATOR expression .\nexpression -> expression . SUM_OPERATOR term\nexpression -> expression . MINUS_OPERATOR term"]
  57 -> 66 [style=solid label="SUM_OPERATOR"]
  57 -> 67 [style=solid label="MINUS_OPERATOR"]
  58 [label="58\nvariable_list -> variable_list SEMICOLON . ID"]
  58 -> 79 [style=solid label="ID"]
  59 [label="59\nwhile_special -> WHILE ID IN OPENING_SQUARE_BRACKET . expression_list CLOSING_SQUARE_BRACKET DO algorithms ENDWHILE"]
  59 -> 44 [style=solid label="FLOAT_CONSTANT"]
  59 -> 45 [style=solid label="STRING_CONSTANT"]
  59 -> 46 [style=solid label="INTEGER_CONSTANT"]
  59 -> 47 [style=solid label="ID"]
  59 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  59 -> 80 [style=dashed label="expression_list"]
  59 -> 81 [style=dashed label="expression"]
  59 -> 53 [style=dashed label="term"]
  59 -> 54 [style=dashed label="factor"]
  60 [label="60\nexpression -> expression . SUM_OPERATOR term\nexpression -> expression . MINUS_OPERATOR term\nfactor -> OPENING_PARENTHESIS expression . CLOSING_PARENTHESIS"]
  60 -> 82 [style=solid label="CLOSING_PARENTHESIS"]
  60 -> 66 [style=solid label="SUM_OPERATOR"]
  60 -> 67 [style=solid label="MINUS_OPERATOR"]
  61 [label="61\ncondition -> NOT_LOGIC_OPERATOR comparation ."]
  62 [label="62\nwhile_loop -> WHILE OPENING_PARENTHESIS condition CLOSING_PARENTHESIS . OPENING_KEY algorithms CLOSING_KEY"]
  62 -> 83 [style=solid label="OPENING_KEY"]
  63 [label="63\nlogic_concatenator -> OR ."]
  64 [label="64\nlogic_concatenator -> AND ."]
  65 [label="65\ncondition -> comparation logic_concatenator . comparation"]
  65 -> 44 [style=solid label="FLOAT_CONSTANT"]
  65 -> 45 [style=solid label="STRING_CONSTANT"]
  65 -> 46 [style=solid label="INTEGER_CONSTANT"]
  65 -> 47 [style=solid label="ID"]
  65 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  65 -> 84 [style=dashed label="comparation"]
  65 -> 52 [style=dashed label="expression"]
  65 -> 53 [style=dashed label="term"]
  65 -> 54 [style=dashed label="factor"]
  66 [label="66\nexpression -> expression SUM_OPERATOR . term"]
  66 -> 44 [style=solid label="FLOAT_CONSTANT"]
  66 -> 45 [style=solid label="STRING_CONSTANT"]
  66 -> 46 [style=solid label="INTEGER_CONSTANT"]
  66 -> 47 [style=solid label="ID"]
  66 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  66 -> 85 [style=dashed label="term"]
  66 -> 54 [style=dashed label="factor"]
  67 [label="67\nexpression -> expression MINUS_OPERATOR . term"]
  67 -> 44 [style=solid label="FLOAT_CONSTANT"]
  67 -> 45 [style=solid label="STRING_CONSTANT"]
  67 -> 46 [style=solid label="INTEGER_CONSTANT"]
  67 -> 47 [style=solid label="ID"]
  67 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  67 -> 86 [style=dashed label="term"]
  67 -> 54 [style=dashed label="factor"]
  68 [label="68\nlogic_operator -> EQUALS_LOGIC_OPERATOR ."]
  69 [label="69\nlogic_operator -> NOT_EQUALS_LOGIC_OPERATOR ."]
  70 [label="70\nlogic_operator -> GREATER_LOGIC_OPERATOR ."]
  71 [label="71\nlogic_operator -> GREATER_OR_EQUAL_LOGIC_OPERATOR ."]
  72 [label="72\nlogic_operator -> LOWER_LOGIC_OPERATOR ."]
  73 [label="73\nlogic_operator -> LOWER_OR_EQUAL_LOGIC_OPERATOR ."]
  74 [label="74\ncomparation -> expression logic_operator . expression"]
  74 -> 44 [style=solid label="FLOAT_CONSTANT"]
  74 -> 45 [style=solid label="STRING_CONSTANT"]
  74 -> 46 [style=solid label="INTEGER_CONSTANT"]
  74 -> 47 [style=solid label="ID"]
  74 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  74 -> 87 [style=dashed label="expression"]
  74 -> 53 [style=dashed label="term"]
  74 -> 54 [style=dashed label="factor"]
  75 [label="75\nterm -> term DIVIDE_OPERATOR . factor"]
  75 -> 44 [style=solid label="FLOAT_CONSTANT"]
  75 -> 45 [style=solid label="STRING_CONSTANT"]
  75 -> 46 [style=solid label="INTEGER_CONSTANT"]
  75 -> 47 [style=solid label="ID"]
  75 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  75 -> 88 [style=dashed label="factor"]
  76 [label="76\nterm -> term MULTIPLIER_OPERATOR . factor"]
  76 -> 44 [style=solid label="FLOAT_CONSTANT"]
  76 -> 45 [style=solid label="STRING_CONSTANT"]
  76 -> 46 [style=solid label="INTEGER_CONSTANT"]
  76 -> 47 [style=solid label="ID"]
  76 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  76 -> 89 [style=dashed label="factor"]
  77 [label="77\ndecision -> IF OPENING_PARENTHESIS condition CLOSING_PARENTHESIS . OPENING_KEY algorithms CLOSING_KEY"]
  77 -> 90 [style=solid label="OPENING_KEY"]
  78 [label="78\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression . TO expression INTEGER_CONSTANT algorithms NEXT ID\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression . TO expression algorithms NEXT ID\nexpression -> expression . SUM_OPERATOR term\nexpression -> expression . MINUS_OPERATOR term"]
  78 -> 91 [style=solid label="TO"]
  78 -> 66 [style=solid label="SUM_OPERATOR"]
  78 -> 67 [style=solid label="MINUS_OPERATOR"]
  79 [label="79\nvariable_list -> variable_list SEMICOLON ID ."]
  80 [label="80\nwhile_special -> WHILE ID IN OPENING_SQUARE_BRACKET expression_list . CLOSING_SQUARE_BRACKET DO algorithms ENDWHILE\nexpression_list -> expression_list . COMMA expression"]
  80 -> 92 [style=solid label="CLOSING_SQUARE_BRACKET"]
  80 -> 93 [style=solid label="COMMA"]
  81 [label="81\nexpression_list -> expression .\nexpression -> expression . SUM_OPERATOR term\nexpression -> expression . MINUS_OPERATOR term"]
  81 -> 66 [style=solid label="SUM_OPERATOR"]
  81 -> 67 [style=solid label="MINUS_OPERATOR"]
  82 [label="82\nfactor -> OPENING_PARENTHESIS expression CLOSING_PARENTHESIS ."]
  83 [label="83\nwhile_loop -> WHILE OPENING_PARENTHESIS condition CLOSING_PARENTHESIS OPENING_KEY . algorithms CLOSING_KEY"]
  83 -> 12 [style=solid label="WHILE"]
  83 -> 13 [style=solid label="IF"]
  83 -> 14 [style=solid label="FOR"]
  83 -> 15 [style=solid label="DISPLAY"]
  83 -> 16 [style=solid label="GET"]
  83 -> 17 [style=solid label="ID"]
  83 -> 94 [style=dashed label="algorithms"]
  83 -> 19 [style=dashed label="algorithm"]
  83 -> 20 [style=dashed label="decision"]
  83 -> 21 [style=dashed label="assignment"]
  83 -> 22 [style=dashed label="while_loop"]
  83 -> 23 [style=dashed label="while_special"]
  83 -> 24 [style=dashed label="for_loop"]
  83 -> 25 [style=dashed label="display"]
  83 -> 26 [style=dashed label="get"]
  84 [label="84\ncondition -> comparation logic_concatenator comparation ."]
  85 [label="85\nexpression -> expression SUM_OPERATOR term .\nterm -> term . MULTIPLIER_OPERATOR factor\nterm -> term . DIVIDE_OPERATOR factor"]
  85 -> 75 [style=solid label="DIVIDE_OPERATOR"]
  85 -> 76 [style=solid label="MULTIPLIER_OPERATOR"]
  86 [label="86\nexpression -> expression MINUS_OPERATOR term .\nterm -> term . MULTIPLIER_OPERATOR factor\nterm -> term . DIVIDE_OPERATOR factor"]
  86 -> 75 [style=solid label="DIVIDE_OPERATOR"]
  86 -> 76 [style=solid label="MULTIPLIER_OPERATOR"]
  87 [label="87\ncomparation -> expression logic_operator expression .\nexpression -> expression . SUM_OPERATOR term\nexpression -> expression . MINUS_OPERATOR term"]
  87 -> 66 [style=solid label="SUM_OPERATOR"]
  87 -> 67 [style=solid label="MINUS_OPERATOR"]
  88 [label="88\nterm -> term DIVIDE_OPERATOR factor ."]
  89 [label="89\nterm -> term MULTIPLIER_OPERATOR factor ."]
  90 [label="90\ndecision -> IF OPENING_PARENTHESIS condition CLOSING_PARENTHESIS OPENING_KEY . algorithms CLOSING_KEY"]
  90 -> 12 [style=solid label="WHILE"]
  90 -> 13 [style=solid label="IF"]
  90 -> 14 [style=solid label="FOR"]
  90 -> 15 [style=solid label="DISPLAY"]
  90 -> 16 [style=solid label="GET"]
  90 -> 17 [style=solid label="ID"]
  90 -> 95 [style=dashed label="algorithms"]
  90 -> 19 [style=dashed label="algorithm"]
  90 -> 20 [style=dashed label="decision"]
  90 -> 21 [style=dashed label="assignment"]
  90 -> 22 [style=dashed label="while_loop"]
  90 -> 23 [style=dashed label="while_special"]
  90 -> 24 [style=dashed label="for_loop"]
  90 -> 25 [style=dashed label="display"]
  90 -> 26 [style=dashed label="get"]
  91 [label="91\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO . expression INTEGER_CONSTANT algorithms NEXT ID\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO . expression algorithms NEXT ID"]
  91 -> 44 [style=solid label="FLOAT_CONSTANT"]
  91 -> 45 [style=solid label="STRING_CONSTANT"]
  91 -> 46 [style=solid label="INTEGER_CONSTANT"]
  91 -> 47 [style=solid label="ID"]
  91 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  91 -> 96 [style=dashed label="expression"]
  91 -> 53 [style=dashed label="term"]
  91 -> 54 [style=dashed label="factor"]
  92 [label="92\nwhile_special -> WHILE ID IN OPENING_SQUARE_BRACKET expression_list CLOSING_SQUARE_BRACKET . DO algorithms ENDWHILE"]
  92 -> 97 [style=solid label="DO"]
  93 [label="93\nexpression_list -> expression_list COMMA . expression"]
  93 -> 44 [style=solid label="FLOAT_CONSTANT"]
  93 -> 45 [style=solid label="STRING_CONSTANT"]
  93 -> 46 [style=solid label="INTEGER_CONSTANT"]
  93 -> 47 [style=solid label="ID"]
  93 -> 48 [style=solid label="OPENING_PARENTHESIS"]
  93 -> 98 [style=dashed label="expression"]
  93 -> 53 [style=dashed label="term"]
  93 -> 54 [style=dashed label="factor"]
  94 [label="94\nalgorithms -> algorithms . algorithm\nwhile_loop -> WHILE OPENING_PARENTHESIS condition CLOSING_PARENTHESIS OPENING_KEY algorithms . CLOSING_KEY"]
  94 -> 12 [style=solid label="WHILE"]
  94 -> 13 [style=solid label="IF"]
  94 -> 14 [style=solid label="FOR"]
  94 -> 15 [style=solid label="DISPLAY"]
  94 -> 16 [style=solid label="GET"]
  94 -> 17 [style=solid label="ID"]
  94 -> 99 [style=solid label="CLOSING_KEY"]
  94 -> 40 [style=dashed label="algorithm"]
  94 -> 20 [style=dashed label="decision"]
  94 -> 21 [style=dashed label="assignment"]
  94 -> 22 [style=dashed label="while_loop"]
  94 -> 23 [style=dashed label="while_special"]
  94 -> 24 [style=dashed label="for_loop"]
  94 -> 25 [style=dashed label="display"]
  94 -> 26 [style=dashed label="get"]
  95 [label="95\nalgorithms -> algorithms . algorithm\ndecision -> IF OPENING_PARENTHESIS condition CLOSING_PARENTHESIS OPENING_KEY algorithms . CLOSING_KEY"]
  95 -> 12 [style=solid label="WHILE"]
  95 -> 13 [style=solid label="IF"]
  95 -> 14 [style=solid label="FOR"]
  95 -> 15 [style=solid label="DISPLAY"]
  95 -> 16 [style=solid label="GET"]
  95 -> 17 [style=solid label="ID"]
  95 -> 100 [style=solid label="CLOSING_KEY"]
  95 -> 40 [style=dashed label="algorithm"]
  95 -> 20 [style=dashed label="decision"]
  95 -> 21 [style=dashed label="assignment"]
  95 -> 22 [style=dashed label="while_loop"]
  95 -> 23 [style=dashed label="while_special"]
  95 -> 24 [style=dashed label="for_loop"]
  95 -> 25 [style=dashed label="display"]
  95 -> 26 [style=dashed label="get"]
  96 [label="96\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO expression . INTEGER_CONSTANT algorithms NEXT ID\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO expression . algorithms NEXT ID\nexpression -> expression . SUM_OPERATOR term\nexpression -> expression . MINUS_OPERATOR term"]
  96 -> 12 [style=solid label="WHILE"]
  96 -> 13 [style=solid label="IF"]
  96 -> 14 [style=solid label="FOR"]
  96 -> 15 [style=solid label="DISPLAY"]
  96 -> 16 [style=solid label="GET"]
  96 -> 101 [style=solid label="INTEGER_CONSTANT"]
  96 -> 17 [style=solid label="ID"]
  96 -> 66 [style=solid label="SUM_OPERATOR"]
  96 -> 67 [style=solid label="MINUS_OPERATOR"]
  96 -> 102 [style=dashed label="algorithms"]
  96 -> 19 [style=dashed label="algorithm"]
  96 -> 20 [style=dashed label="decision"]
  96 -> 21 [style=dashed label="assignment"]
  96 -> 22 [style=dashed label="while_loop"]
  96 -> 23 [style=dashed label="while_special"]
  96 -> 24 [style=dashed label="for_loop"]
  96 -> 25 [style=dashed label="display"]
  96 -> 26 [style=dashed label="get"]
  97 [label="97\nwhile_special -> WHILE ID IN OPENING_SQUARE_BRACKET expression_list CLOSING_SQUARE_BRACKET DO . algorithms ENDWHILE"]
  97 -> 12 [style=solid label="WHILE"]
  97 -> 13 [style=solid label="IF"]
  97 -> 14 [style=solid label="FOR"]
  97 -> 15 [style=solid label="DISPLAY"]
  97 -> 16 [style=solid label="GET"]
  97 -> 17 [style=solid label="ID"]
  97 -> 103 [style=dashed label="algorithms"]
  97 -> 19 [style=dashed label="algorithm"]
  97 -> 20 [style=dashed label="decision"]
  97 -> 21 [style=dashed label="assignment"]
  97 -> 22 [style=dashed label="while_loop"]
  97 -> 23 [style=dashed label="while_special"]
  97 -> 24 [style=dashed label="for_loop"]
  97 -> 25 [style=dashed label="display"]
  97 -> 26 [style=dashed label="get"]
  98 [label="98\nexpression_list -> expression_list COMMA expression .\nexpression -> expression . SUM_OPERATOR term\nexpression -> expression . MINUS_OPERATOR term"]
  98 -> 66 [style=solid label="SUM_OPERATOR"]
  98 -> 67 [style=solid label="MINUS_OPERATOR"]
  99 [label="99\nwhile_loop -> WHILE OPENING_PARENTHESIS condition CLOSING_PARENTHESIS OPENING_KEY algorithms CLOSING_KEY ."]
  100 [label="100\ndecision -> IF OPENING_PARENTHESIS condition CLOSING_PARENTHESIS OPENING_KEY algorithms CLOSING_KEY ."]
  101 [label="101\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO expression INTEGER_CONSTANT . algorithms NEXT ID"]
  101 -> 12 [style=solid label="WHILE"]
  101 -> 13 [style=solid label="IF"]
  101 -> 14 [style=solid label="FOR"]
  101 -> 15 [style=solid label="DISPLAY"]
  101 -> 16 [style=solid label="GET"]
  101 -> 17 [style=solid label="ID"]
  101 -> 104 [style=dashed label="algorithms"]
  101 -> 19 [style=dashed label="algorithm"]
  101 -> 20 [style=dashed label="decision"]
  101 -> 21 [style=dashed label="assignment"]
  101 -> 22 [style=dashed label="while_loop"]
  101 -> 23 [style=dashed label="while_special"]
  101 -> 24 [style=dashed label="for_loop"]
  101 -> 25 [style=dashed label="display"]
  101 -> 26 [style=dashed label="get"]
  102 [label="102\nalgorithms -> algorithms . algorithm\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO expression algorithms . NEXT ID"]
  102 -> 12 [style=solid label="WHILE"]
  102 -> 13 [style=solid label="IF"]
  102 -> 14 [style=solid label="FOR"]
  102 -> 105 [style=solid label="NEXT"]
  102 -> 15 [style=solid label="DISPLAY"]
  102 -> 16 [style=solid label="GET"]
  102 -> 17 [style=solid label="ID"]
  102 -> 40 [style=dashed label="algorithm"]
  102 -> 20 [style=dashed label="decision"]
  102 -> 21 [style=dashed label="assignment"]
  102 -> 22 [style=dashed label="while_loop"]
  102 -> 23 [style=dashed label="while_special"]
  102 -> 24 [style=dashed label="for_loop"]
  102 -> 25 [style=dashed label="display"]
  102 -> 26 [style=dashed label="get"]
  103 [label="103\nalgorithms -> algorithms . algorithm\nwhile_special -> WHILE ID IN OPENING_SQUARE_BRACKET expression_list CLOSING_SQUARE_BRACKET DO algorithms . ENDWHILE"]
  103 -> 12 [style=solid label="WHILE"]
  103 -> 13 [style=solid label="IF"]
  103 -> 14 [style=solid label="FOR"]
  103 -> 15 [style=solid label="DISPLAY"]
  103 -> 16 [style=solid label="GET"]
  103 -> 17 [style=solid label="ID"]
  103 -> 106 [style=solid label="ENDWHILE"]
  103 -> 40 [style=dashed label="algorithm"]
  103 -> 20 [style=dashed label="decision"]
  103 -> 21 [style=dashed label="assignment"]
  103 -> 22 [style=dashed label="while_loop"]
  103 -> 23 [style=dashed label="while_special"]
  103 -> 24 [style=dashed label="for_loop"]
  103 -> 25 [style=dashed label="display"]
  103 -> 26 [style=dashed label="get"]
  104 [label="104\nalgorithms -> algorithms . algorithm\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO expression INTEGER_CONSTANT algorithms . NEXT ID"]
  104 -> 12 [style=solid label="WHILE"]
  104 -> 13 [style=solid label="IF"]
  104 -> 14 [style=solid label="FOR"]
  104 -> 107 [style=solid label="NEXT"]
  104 -> 15 [style=solid label="DISPLAY"]
  104 -> 16 [style=solid label="GET"]
  104 -> 17 [style=solid label="ID"]
  104 -> 40 [style=dashed label="algorithm"]
  104 -> 20 [style=dashed label="decision"]
  104 -> 21 [style=dashed label="assignment"]
  104 -> 22 [style=dashed label="while_loop"]
  104 -> 23 [style=dashed label="while_special"]
  104 -> 24 [style=dashed label="for_loop"]
  104 -> 25 [style=dashed label="display"]
  104 -> 26 [style=dashed label="get"]
  105 [label="105\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO expression algorithms NEXT . ID"]
  105 -> 108 [style=solid label="ID"]
  106 [label="106\nwhile_special -> WHILE ID IN OPENING_SQUARE_BRACKET expression_list CLOSING_SQUARE_BRACKET DO algorithms ENDWHILE ."]
  107 [label="107\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO expression INTEGER_CONSTANT algorithms NEXT . ID"]
  107 -> 109 [style=solid label="ID"]
  108 [label="108\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO expression algorithms NEXT ID ."]
  109 [label="109\nfor_loop -> FOR ID ASSIGNMENT_OPERATOR expression TO expression INTEGER_CONSTANT algorithms NEXT ID ."]
}
